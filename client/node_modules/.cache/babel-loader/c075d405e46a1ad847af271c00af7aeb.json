{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Udemy\\\\wooden-churner\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport ProductPage from \"../product/product.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.action\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unSubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId/:productId`,\n      component: ProductPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/React Udemy/wooden-churner/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","ProductPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","ShopPage","Component","constructor","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACtCC,EAAAA,WAAW,GAAG;AACb;AADa,SAGdC,uBAHc,GAGY,IAHZ;AAEb;;AAGDC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3E,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAX,MAAAA,iBAAiB,CAACY,cAAD,CAAjB;AACA,KAH8B,CAA/B;AAIA;;AAEDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEmB,KAAK,CAACC,IAAK,gBAAjC;AAAkD,MAAA,SAAS,EAAEnB,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEkB,KAAK,CAACC,IAAK,2BAA3B;AAAuD,MAAA,SAAS,EAAElB,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADD;AAOA;;AAzBqC;;AA4BvC,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACzCjB,EAAAA,iBAAiB,EAAGY,cAAD,IAAoBK,QAAQ,CAACjB,iBAAiB,CAACY,cAAD,CAAlB;AADN,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\nimport ProductPage from \"../product/product.component\";\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop.action\";\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nclass ShopPage extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t}\r\n\tunSubscribeFromSnapshot = null;\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { updateCollections } = this.props;\r\n\t\tconst collectionRef = firestore.collection(\"collections\");\r\n\r\n\t\tthis.unSubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot) => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tupdateCollections(collectionsMap);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { match } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"shop-page\">\r\n\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n\t\t\t\t<Route exact path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n\t\t\t\t<Route path={`${match.path}/:collectionId/:productId`} component={ProductPage} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tupdateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}