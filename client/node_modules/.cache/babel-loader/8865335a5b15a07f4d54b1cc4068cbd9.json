{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Udemy\\\\wooden-churner\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport ProductPage from \"../product/product.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nconst ProductPageWithSpinner = WithSpinner(ProductPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    fetch(\"https://firestore.googleapis.com/v1/projects/go-grocery-db/databases/(default)/documents/collections\").then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get().then((snapshot) => {\n    // \tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    // \tupdateCollections(collectionsMap);\n    // \tthis.setState({ isLoading: false });\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId/:productId`,\n      render: props => /*#__PURE__*/React.createElement(ProductPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/React Udemy/wooden-churner/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","ProductPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ProductPageWithSpinner","ShopPage","Component","state","isLoading","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\nimport ProductPage from \"../product/product.component\";\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop.action\";\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\nconst ProductPageWithSpinner = WithSpinner(ProductPage);\r\nclass ShopPage extends React.Component {\r\n\tstate = {\r\n\t\tisLoading: true,\r\n\t};\r\n\tunSubscribeFromSnapshot = null;\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { updateCollections } = this.props;\r\n\t\tconst collectionRef = firestore.collection(\"collections\");\r\n\r\n\t\t  fetch(\r\n\t\t\t\t\"https://firestore.googleapis.com/v1/projects/go-grocery-db/databases/(default)/documents/collections\"\r\n\t\t\t)\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((collections) => console.log(collections));\r\n\r\n\t\t// collectionRef.get().then((snapshot) => {\r\n\t\t// \tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t// \tupdateCollections(collectionsMap);\r\n\t\t// \tthis.setState({ isLoading: false });\r\n\t\t// });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { match } = this.props;\r\n\t\tconst { isLoading } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"shop-page\">\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact\r\n\t\t\t\t\tpath={`${match.path}`}\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact\r\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<CollectionPageWithSpinner isLoading={isLoading} {...props} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={`${match.path}/:collectionId/:productId`}\r\n\t\t\t\t\trender={(props) => <ProductPageWithSpinner isLoading={isLoading} {...props} />}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tupdateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}