{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["D:/React Udemy/wooden-churner/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUp","displayName","createUserWithEmailAndPassword","isUserAuthenticated","signOut","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport {\r\n\tsignInSuccess,\r\n\tsignInFailure,\r\n\tsignOutFailure,\r\n\tsignOutSuccess,\r\n\tsignUpFailure,\r\n\tsignUpSuccess,\r\n} from \"./user.actions\";\r\n\r\nimport {\r\n\tauth,\r\n\tgoogleProvider,\r\n\tcreateUserProfileDocument,\r\n\tgetCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n\ttry {\r\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n\t\tyield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n\t} catch (error) {\r\n\t\tyield put(signUpFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n\ttry {\r\n\t\tconst userAuth = yield getCurrentUser();\r\n\t\tif (!userAuth) return;\r\n\t\tyield getSnapshotFromUserAuth(userAuth);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signOut() {\r\n\ttry {\r\n\t\tyield auth.signOut();\r\n\t\tyield put(signOutSuccess());\r\n\t} catch (error) {\r\n\t\tyield put(signOutFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signInAfterSignUp({payload: { user, additionalData }}) {\r\n\tyield getSnapshotFromUserAuth(user, )\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n\tyield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n\tyield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([\r\n\t\tcall(onGoogleSignInStart),\r\n\t\tcall(onEmailSignInStart),\r\n\t\tcall(onCheckUserSession),\r\n\t\tcall(onSignOutStart),\r\n\t\tcall(onSignUpStart),\r\n\t\tcall(onSignUpSuccess),\r\n\t]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}