{"ast":null,"code":"// import { createSelector } from \"reselect\";\n// // import memoize from \"lodash.memoize\";\n// const selectShop = (state) => state.shop;\n// export const selectCollections = createSelector([selectShop], (shop) => shop.collections);\n// export const selectCollectionsForPreview = createSelector([selectCollections], (collections) =>\n// \tObject.keys(collections).map((key) => collections[key])\n// );\n// export const selectCollection = (collectionUrlParam) =>\n// \tcreateSelector([selectCollections], (collections) => collections[collectionUrlParam]);\n// export const selectProducts = (collectionUrlParam, productUrlParam) =>\n// \tcreateSelector([selectCollections], (collections) => collections[collectionUrlParam].items[productUrlParam]);\n// // export const selectProducts = createSelector([selectCollections], (collection) => collection[\"oils\"].items.map(i => i.products));\n// export const selectProduct = (collectionUrlParam, productUrlParam) =>\n// \tcreateSelector(\n// \t\t[selectCollections],\n// \t\t(collections) => collections[collectionUrlParam].items[productUrlParam].products\n// \t);\nimport { createSelector } from \"reselect\"; // import memoize from \"lodash.memoize\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => Object.keys(collections).map(key => collections[key]));\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections[collectionUrlParam]);","map":{"version":3,"sources":["D:/React Udemy/wooden-churner/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA,SAASA,cAAT,QAA+B,UAA/B,C,CACA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAAUA,IAAI,CAACE,WAA9B,CAAxC;AAEP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAuBC,WAAD,IAC9EE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CADwD,CAAlD;AAIP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC/BZ,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAuBC,WAAD,IAAiBA,WAAW,CAACO,kBAAD,CAAlD,CADR","sourcesContent":["// import { createSelector } from \"reselect\";\r\n// // import memoize from \"lodash.memoize\";\r\n\r\n// const selectShop = (state) => state.shop;\r\n\r\n// export const selectCollections = createSelector([selectShop], (shop) => shop.collections);\r\n\r\n// export const selectCollectionsForPreview = createSelector([selectCollections], (collections) =>\r\n// \tObject.keys(collections).map((key) => collections[key])\r\n// );\r\n\r\n// export const selectCollection = (collectionUrlParam) =>\r\n// \tcreateSelector([selectCollections], (collections) => collections[collectionUrlParam]);\r\n\r\n// export const selectProducts = (collectionUrlParam, productUrlParam) =>\r\n// \tcreateSelector([selectCollections], (collections) => collections[collectionUrlParam].items[productUrlParam]);\r\n\r\n// // export const selectProducts = createSelector([selectCollections], (collection) => collection[\"oils\"].items.map(i => i.products));\r\n\r\n// export const selectProduct = (collectionUrlParam, productUrlParam) =>\r\n// \tcreateSelector(\r\n// \t\t[selectCollections],\r\n// \t\t(collections) => collections[collectionUrlParam].items[productUrlParam].products\r\n// \t);\r\n\r\nimport { createSelector } from \"reselect\";\r\n// import memoize from \"lodash.memoize\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector([selectShop], (shop) => shop.collections);\r\n\r\nexport const selectCollectionsForPreview = createSelector([selectCollections], (collections) =>\r\n\tObject.keys(collections).map((key) => collections[key])\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n\tcreateSelector([selectCollections], (collections) => collections[collectionUrlParam]);"]},"metadata":{},"sourceType":"module"}