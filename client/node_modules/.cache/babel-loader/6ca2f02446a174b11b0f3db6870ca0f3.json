{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/React Udemy/wooden-churner/src/redux/shop/shop.action.js"],"names":["firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC3DH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADqC;AAE3DC,EAAAA,OAAO,EAAEF;AAFkD,CAArB,CAAhC;AAKP,OAAO,MAAMG,sBAAsB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAA/B;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC/C,SAAQC,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,YAAMZ,cAAc,GAAGN,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,KALF,EAMEa,KANF,CAMSC,KAAD,IAAWP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAN3B;AAOA,GAXD;AAYA,CAbM","sourcesContent":["import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n\tpayload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionFailure = (errorMessage) => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n\tpayload: errorMessage,\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n\treturn (dispatch) => {\r\n\t\tconst collectionRef = firestore.collection(\"collections\");\r\n\t\tdispatch(fetchCollectionsStart());\r\n\r\n\t\tcollectionRef\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t\t\t})\r\n\t\t\t.catch((error) => dispatch(fetchCollectionFailure(error.message)));\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}