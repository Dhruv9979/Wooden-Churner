{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Udemy\\\\wooden-churner\\\\src\\\\components\\\\collection-item\\\\collection-item.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nimport { CollectionItemContainer, CollectionFooterContainer, AddButton, BackgroundImage, NameContainer, PriceContainer } from \"./collection-styles.styles\"; //Check for routeName.\n// If yes, check for type. If no then match.url.\n//If yes for type then add type to route. If no, then match.url/routeName\n// routeName ? (type ? `${match.url}/${type}/${routeName}` : `${match.url}/${routeName}`) : `${match.url}`\n\nconst CollectionItem = ({\n  item,\n  addItem,\n  match,\n  history\n}) => {\n  const {\n    name,\n    price,\n    imageUrl,\n    routeName,\n    type\n  } = item;\n  const routingProducts = routeName ? match.url.indexOf(type) > -1 ? `${match.url}/${routeName}` : `${match.url}/${type}/${routeName}` : `${match.url}`;\n  return /*#__PURE__*/React.createElement(CollectionItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    to: routingProducts,\n    className: \"image\",\n    imageUrl: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CollectionFooterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"\\u20B9\", price)), routeName ? \"\" : /*#__PURE__*/React.createElement(CustomButton, {\n    inverted: true,\n    onClick: () => addItem(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"ADD TO CART\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(CollectionItem));","map":{"version":3,"sources":["D:/React Udemy/wooden-churner/src/components/collection-item/collection-item.component.jsx"],"names":["React","connect","withRouter","Link","CustomButton","addItem","CollectionItemContainer","CollectionFooterContainer","AddButton","BackgroundImage","NameContainer","PriceContainer","CollectionItem","item","match","history","name","price","imageUrl","routeName","type","routingProducts","url","indexOf","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAEA,SACCC,uBADD,EAECC,yBAFD,EAGCC,SAHD,EAICC,eAJD,EAKCC,aALD,EAMCC,cAND,QAOO,4BAPP,C,CASA;AACA;AACA;AACA;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQR,EAAAA,OAAR;AAAiBS,EAAAA,KAAjB;AAAwBC,EAAAA;AAAxB,CAAD,KAAuC;AAC7D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA;AAApC,MAA6CP,IAAnD;AAEA,QAAMQ,eAAe,GAAGF,SAAS,GAC9BL,KAAK,CAACQ,GAAN,CAAUC,OAAV,CAAkBH,IAAlB,IAA0B,CAAC,CAA3B,GACE,GAAEN,KAAK,CAACQ,GAAI,IAAGH,SAAU,EAD3B,GAEE,GAAEL,KAAK,CAACQ,GAAI,IAAGF,IAAK,IAAGD,SAAU,EAHL,GAI7B,GAAEL,KAAK,CAACQ,GAAI,EAJhB;AAMA,sBACC,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,eAAD;AAAiB,IAAA,EAAE,EAAED,eAArB;AAAsC,IAAA,SAAS,EAAC,OAAhD;AAAwD,IAAA,QAAQ,EAAEH,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADD,eAEC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCC,KAAjC,CAFD,CAFD,EAMEE,SAAS,GACT,EADS,gBAGT,oBAAC,YAAD;AAAc,IAAA,QAAQ,MAAtB;AAAuB,IAAA,OAAO,EAAE,MAAMd,OAAO,CAACQ,IAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,CADD;AAgBA,CAzBD;;AA2BA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACzCpB,EAAAA,OAAO,EAAGQ,IAAD,IAAUY,QAAQ,CAACpB,OAAO,CAACQ,IAAD,CAAR;AADc,CAAf,CAA3B;;AAIA,eAAeX,UAAU,CAACD,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkCZ,cAAlC,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { addItem } from \"../../redux/cart/cart.actions\";\r\n\r\nimport {\r\n\tCollectionItemContainer,\r\n\tCollectionFooterContainer,\r\n\tAddButton,\r\n\tBackgroundImage,\r\n\tNameContainer,\r\n\tPriceContainer,\r\n} from \"./collection-styles.styles\";\r\n\r\n//Check for routeName.\r\n// If yes, check for type. If no then match.url.\r\n//If yes for type then add type to route. If no, then match.url/routeName\r\n// routeName ? (type ? `${match.url}/${type}/${routeName}` : `${match.url}/${routeName}`) : `${match.url}`\r\n\r\n\r\nconst CollectionItem = ({ item, addItem, match, history }) => {\r\n\tconst { name, price, imageUrl, routeName, type } = item;\r\n\t\r\n\tconst routingProducts = routeName\r\n\t\t? match.url.indexOf(type) > -1\r\n\t\t\t? `${match.url}/${routeName}`\r\n\t\t\t: `${match.url}/${type}/${routeName}`\r\n\t\t: `${match.url}`;\r\n\r\n\treturn (\r\n\t\t<CollectionItemContainer>\r\n\t\t\t<BackgroundImage to={routingProducts} className=\"image\" imageUrl={imageUrl} />\r\n\t\t\t<CollectionFooterContainer>\r\n\t\t\t\t<span className=\"name\">{name}</span>\r\n\t\t\t\t<span className=\"price\">&#x20B9;{price}</span>\r\n\t\t\t</CollectionFooterContainer>\r\n\t\t\t{routeName ? (\r\n\t\t\t\t\"\"\r\n\t\t\t) : (\r\n\t\t\t\t<CustomButton inverted onClick={() => addItem(item)}>\r\n\t\t\t\t\tADD TO CART\r\n\t\t\t\t</CustomButton>\r\n\t\t\t)}\r\n\t\t</CollectionItemContainer>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\taddItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(CollectionItem));\r\n"]},"metadata":{},"sourceType":"module"}